&Пластилин
Перем КаталогиДанных;

&Пластилин
Перем Дистрибутивы;

&Желудь
Процедура ПриСозданииОбъекта()
	
КонецПроцедуры

Функция ПолучитьСоставВерсии(Знач ТокенВерсии) Экспорт
	
	Таблица = ТаблицаФайлов();

	КаталогВерсии = Новый Файл(ОбъединитьПути(КаталогиДанных.КаталогВерсий(), ТокенВерсии));
	Если Не СтрНачинаетсяС(КаталогВерсии.ПолноеИмя, КаталогиДанных.КаталогВерсий()) или Не КаталогВерсии.Существует() Тогда
		Возврат Новый СоставВерсии(ТокенВерсии, Таблица, Истина);
	КонецЕсли;

	// по манифесту найти целевые файлы
	Для Каждого ВариантСборки Из Дистрибутивы Цикл
		
		НайденныеФайлы = ВариантСборки.ПолучитьФайлы(КаталогВерсии.ПолноеИмя);
		Если Не НайденныеФайлы.Количество() Тогда
			Продолжить;
		КонецЕсли;

		Для Каждого НайденныйФайл Из НайденныеФайлы Цикл
			
			Файл = НайденныйФайл.Файл;
			
			СтрокаДистрибутива = Таблица.Добавить();
			СтрокаДистрибутива.Идентификатор = ВариантСборки.ПолучитьИдентификатор();
			СтрокаДистрибутива.Архитектура = НайденныйФайл.Архитектура;
			СтрокаДистрибутива.ВидДистрибутива = НайденныйФайл.ВидДистрибутива;
			СтрокаДистрибутива.ИмяФайла = Файл.Имя;
			СтрокаДистрибутива.ДатаФайла = Формат(Файл.ПолучитьВремяИзменения(), "ДЛФ=Д");
			СтрокаДистрибутива.Ссылка = "/downloads/" + ОбъединитьПути(ТокенВерсии, НайденныйФайл.Подкаталог, Файл.Имя);
			#Если Windows Тогда
				СтрокаДистрибутива.Ссылка = СтрЗаменить(СтрокаДистрибутива.Ссылка, "\", "/");
			#КонецЕсли
			СтрокаДистрибутива.Файл = НайденныйФайл.Файл;
		КонецЦикла;
		
	КонецЦикла;

	Возврат Новый СоставВерсии(ТокенВерсии, Таблица, Ложь);

КонецФункции

Функция ТаблицаФайлов()
	Варианты = Новый ТаблицаЗначений();
	Варианты.Колонки.Добавить("ИмяФайла");
	Варианты.Колонки.Добавить("Идентификатор");
	Варианты.Колонки.Добавить("Архитектура");
	Варианты.Колонки.Добавить("ВидДистрибутива");
	Варианты.Колонки.Добавить("ДатаФайла");
	Варианты.Колонки.Добавить("Ссылка");
	Варианты.Колонки.Добавить("Файл");

	Возврат Варианты;
КонецФункции